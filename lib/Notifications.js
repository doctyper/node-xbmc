// Generated by CoffeeScript 1.4.0
(function() {
  var Notifications, pubsub;

  pubsub = require('./PubSub');

  Notifications = (function() {

    function Notifications() {}

    Notifications.mixin = function(api) {
      var method, name;
      this.api = api;
      api.notifications = {};
      for (name in this) {
        method = this[name];
        api.notifications[name] = method;
      }
      return delete api.notifications.mixin;
    };

    Notifications.delegate = function(data) {
      var type;
      type = data.method.split('.On')[1].toLowerCase();
      pubsub.emit("notification:" + type, data);
      if (Notifications[type] != null) {
        return Notifications[type](data.params.data);
      } else {
        return console.log("Unhandled notification type: " + type);
      }
    };

    Notifications.play = function(data) {
      return Notifications.api.handlers.players(data);
    };

    Notifications.stop = function(data) {
      return pubsub.emit('api:playerStopped', data);
    };

    Notifications.add = function() {};

    Notifications.update = function() {};

    Notifications.clear = function() {};

    Notifications.scanstarted = function() {};

    Notifications.scanfinished = function() {};

    Notifications.pause = function() {};

    Notifications.screensaveractivated = function() {};

    Notifications.screensaverdeactivated = function() {};

    Notifications.seek = function() {};

    Notifications.volumechanged = function() {};

    Notifications.inputrequested = function() {
      return pubsub.emit('api:Input.OnInputRequested');
    };

    Notifications.inputfinished = function() {
      return pubsub.emit('api:Input.OnInputFinished');
    };

    Notifications.wake = function() {};

    Notifications.sleep = function() {};

    Notifications.remove = function() {};

    return Notifications;

  }).call(this);

  module.exports = Notifications;

}).call(this);
